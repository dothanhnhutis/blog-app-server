generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id          String   @id @default(uuid())
  roleName    String   @unique
  canDelete   Boolean  @default(true)
  permissions String[]
  User        User[]

  @@index([roleName])
}

model User {
  id       String  @id @default(uuid())
  email    String  @unique
  password String?
  role     Role    @relation(fields: [roleId], references: [id])
  roleId   String
  isActive Boolean @default(true)

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  username  String
  bio       String?
  phone     String?
  avatarUrl String?
  address   String?

  posts Post[]

  @@index([email, username, phone])
}

model Tag {
  id      String @id @default(uuid())
  tagName String
  slug    String @unique
  post    Post[]

  @@index([tagName, slug])
}

model Post {
  id       String   @id @default(uuid())
  title    String
  thumnail String
  slug     String   @unique
  content  String
  tag      Tag      @relation(fields: [tagId], references: [id])
  tagId    String
  author   User     @relation(fields: [authorId], references: [id])
  authorId String
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  @@index([title, slug, tagId, authorId])
}

model Otp {
  id       String   @id @default(uuid())
  code     String
  type     OtpType
  verified Boolean  @default(false)
  email    String
  expireAt DateTime

  @@unique([code, email])
  @@index([code, email])
}

enum OtpType {
  SIGNINUP
  RESETPASSWORD
}
